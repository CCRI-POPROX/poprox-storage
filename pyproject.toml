[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "poprox-storage"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.10"
keywords = []
authors = [{ name = "Karl Higley", email = "khigley@umn.edu" }]
dependencies = [
  "boto3~=1.33.3",
  "botocore~=1.33.3",
  "pandas",
  "psycopg2-binary",
  "pydantic~=2.7.1",
  "smart_open",
  "sqlalchemy",
  "tomli",
  "tqdm",
  "poprox-concepts@git+https://github.com/CCRI-POPROX/poprox-concepts.git",
]

[project.optional-dependencies]
dev = [
  "alembic",
  "sqlalchemy_utils",
  "yarl",
  "python-dotenv",
  "configargparse",
  "coverage[toml]>=6.5",
  "pytest",
]

[project.urls]
Documentation = "https://github.com/ccri-poprox/poprox-storage#readme"
Issues = "https://github.com/ccri-poprox/poprox-storage/issues"
Source = "https://github.com/ccri-poprox/poprox-storage"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "src/poprox_storage/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "alembic",
  "sqlalchemy_utils",
  "yarl",
  "python-dotenv",
  "configargparse",
  "coverage[toml]>=6.5",
  "pytest",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[tool.hatch.envs.lint]
detached = true
dependencies = ["ruff>=0.4", "pyright>=1.1,<2"]
[tool.hatch.envs.lint.scripts]
typing = "pyright {args:src/poprox_storage tests}"
style = ["ruff check {args:.}", "ruff format --check --diff {args:.}"]
fmt = ["ruff format {args:.}", "ruff check --fix {args:.}", "style"]
all = ["style", "typing"]

[tool.ruff]
target-version = "py311"
line-length = 120


[tool.ruff.lint]
select = ["F", "I", "E"]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["poprox_recommender", "poprox_concepts", "poprox_storage"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["poprox_storage", "tests"]
branch = true
parallel = true
omit = ["src/poprox_storage/__about__.py"]

[tool.coverage.paths]
poprox_storage = ["src/poprox_storage", "*/poprox-storage/src/poprox_storage"]
tests = ["tests", "*/poprox-storage/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.conda-lock]
channels = ["conda-forge", "nodefaults"]
# restrict to commonly-used platforms
# if we need to add support for windows, we can try adding that here
platforms = ["linux-64", "osx-arm64"]
# extra deps in the conda environment
[tool.conda-lock.dependencies]
# specify our Python version
python = "=3.11"
# conda-lock doesn't look in Hatch environments, so this pulls in dev deps
ruff = ">=0.4"
pyright = ">=1.1,<2"
pytest = ">=7"
coverage = ">=6.5"
# we want conda-lock to manage the lockfiles
conda-lock = ">=2.5,<3"
